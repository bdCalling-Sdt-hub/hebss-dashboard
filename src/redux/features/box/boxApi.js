import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

export const boxApi = createApi({
  reducerPath: "boxApi",
  baseQuery: fetchBaseQuery({
    baseUrl: import.meta.env.VITE_BACKEND_URL,
    prepareHeaders: (headers) => {
      const token = localStorage.getItem("token");
      if (token) {
        headers.set("Authorization", `Bearer ${token}`);
      }
      return headers;
    },
  }),
  endpoints: (builder) => ({
    getAllBox: builder.query({
      query: () => "/box/retrieve",
    }),
      getBoxById: builder.query({
      query: (boxId) => `/box/${boxId}`,  
    }),
    updateBox: builder.mutation({
      query: ({ _id, data }) => ({
        url: `/box/customize/${_id}`,
        method: "PATCH",
        body: data,
      }),
    }),
  }),
});

// Export the hook generated by RTK Query
export const { useGetAllBoxQuery,useUpdateBoxMutation,useGetBoxByIdQuery} = boxApi;

export default boxApi